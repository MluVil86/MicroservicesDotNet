{
  "Routes": [
    {
      "UpstreamPathTemplate": "/gateway/Orders",
      "DownstreamPathTemplate": "/api/Orders",
      "DownstreamHostAndPorts": [
        {
          "Host": "orderservice.api",
          "Port": 8080
        }
      ],
      "UpstreamHttpMethod": [
        "Get"
      ],
      "UpstreamScheme": "http",
      "FileCacheOptions": {
        "Region": "Orders", //creates the cache in a specified name or region
        "TtlSeconds": 30 //cache results for 30 seconds
      },
     
      "QoSOptions": {   //Polly policy configuration
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 10000, //10 seconds
        "TimeoutValue": 60000 //5 seconds = 5000
      },
      "RetryOptions": {
        "RetryCount": 3,
        "RetryOnServerError": true
      },
      "RateLimitOptions": {
        "Limit": 3,
        "Period": "30s", //h for hours, m for minutes, ms for milliseconfs
        "HttpStatusCode": 429,
        "EnableRateLimiting": true,
        "PeriodTimespan": 30 //default is in seconds
      },
      "ClientWhitelist": [
        "Client1", //names of client whitelisted
        "Client2"
      ],
      "ClientIdHeader": "Client-Id"  //can be header key or Id
    },
    {
      "UpstreamPathTemplate": "/gateway/Orders/search/orderid/{orderID}",
      "DownstreamPathTemplate": "/api/Orders/search/orderid/{orderID}",
      "DownstreamHostAndPorts": [
        {
          "Host": "orderservice.api",
          "Port": 8080
        }
      ],
      "UpstreamHttpMethod": [
        "Get"
      ],
      "UpstreamScheme": "http",
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 10000, //10 seconds
        "TimeoutValue": 5000 //5 seconds
      },
      "RetryOptions": {
        "RetryCount": 3,
        "RetryOnServerError": true
      }
    },
    {
      "UpstreamPathTemplate": "/gateway/Orders/search/productid/{productID}",
      "DownstreamPathTemplate": "/api/Orders/search/productid/{productID}",
      "DownstreamHostAndPorts": [
        {
          "Host": "orderservice.api",
          "Port": 8080
        }
      ],
      "UpstreamHttpMethod": [
        "Get"
      ],
      "UpstreamScheme": "http",
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 10000, //10 seconds
        "TimeoutValue": 5000 //5 seconds
      },
      "RetryOptions": {
        "RetryCount": 3,
        "RetryOnServerError": true
      }
    },
    {
      "UpstreamPathTemplate": "/gateway/Orders/search/orderDate/{orderDate}",
      "DownstreamPathTemplate": "/api/Orders/search/orderDate/{orderDate}",
      "DownstreamHostAndPorts": [
        {
          "Host": "orderservice.api",
          "Port": 8080
        }
      ],
      "UpstreamHttpMethod": [
        "Get"
      ],
      "UpstreamScheme": "http",
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 10000, //10 seconds
        "TimeoutValue": 5000 //5 seconds
      },
      "RetryOptions": {
        "RetryCount": 3,
        "RetryOnServerError": true
      }
    },
    {
      "UpstreamPathTemplate": "/gateway/Orders/search/userId/{userId}",
      "DownstreamPathTemplate": "/api/Orders/search/userId/{userId}",
      "DownstreamHostAndPorts": [
        {
          "Host": "orderservice.api",
          "Port": 8080
        }
      ],
      "UpstreamHttpMethod": [
        "Get"
      ],
      "UpstreamScheme": "http",
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 10000, //10 seconds
        "TimeoutValue": 5000 //5 seconds
      },
      "RetryOptions": {
        "RetryCount": 3,
        "RetryOnServerError": true
      }
    },
    {
      "UpstreamPathTemplate": "/gateway/Orders/{orderID}",
      "DownstreamPathTemplate": "/api/Orders/{orderID}",
      "DownstreamHostAndPorts": [
        {
          "Host": "orderservice.api",
          "Port": 8080
        }
      ],
      "UpstreamHttpMethod": [
        "Put",
        "Delete",
        "Options"
      ],
      "UpstreamScheme": "http",
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 10000, //10 seconds
        "TimeoutValue": 5000 //5 seconds
      },
      "RetryOptions": {
        "RetryCount": 3,
        "RetryOnServerError": true
      }
    },
    {
      "UpstreamPathTemplate": "/gateway/Products",
      "DownstreamPathTemplate": "/api/Products",
      "DownstreamHostAndPorts": [
        {
          "Host": "products-microservice",
          "Port": 8080
        }
      ],
      "UpstreamHttpMethod": [
        "Get",
        "Post",
        "Put",
        "Options"
      ],
      "UpstreamScheme": "http",
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 10000, //10 seconds
        "TimeoutValue": 5000 //5 seconds
      },
      "RetryOptions": {
        "RetryCount": 3,
        "RetryOnServerError": true
      }
    },
    {
      "UpstreamPathTemplate": "/gateway/Products/delete/{ProductId}",
      "DownstreamPathTemplate": "/api/Products/delete/{ProductId}",
      "DownstreamHostAndPorts": [
        {
          "Host": "products-microservice",
          "Port": 8080
        }
      ],
      "UpstreamHttpMethod": [
        "Get",
        "Options"
      ],
      "UpstreamScheme": "http",
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 10000, //10 seconds
        "TimeoutValue": 5000 //5 seconds
      },
      "RetryOptions": {
        "RetryCount": 3,
        "RetryOnServerError": true
      }
    },
    {
      "UpstreamPathTemplate": "/gateway/Products/update",
      "DownstreamPathTemplate": "/api/Products/update",
      "DownstreamHostAndPorts": [
        {
          "Host": "products-microservice",
          "Port": 8080
        }
      ],
      "UpstreamHttpMethod": [
        "Put",
        "Options"
      ],
      "UpstreamScheme": "http",
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 10000, //10 seconds
        "TimeoutValue": 5000 //5 seconds
      },
      "RetryOptions": {
        "RetryCount": 3,
        "RetryOnServerError": true
      }
    },
    {
      "UpstreamPathTemplate": "/gateway/products/add",
      "DownstreamPathTemplate": "/api/products/add",
      "DownstreamHostAndPorts": [
        {
          "Host": "products-microservice",
          "Port": 8080
        }
      ],
      "UpstreamHttpMethod": [
        "Post",
        "Options"
      ],
      "UpstreamScheme": "http",
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 10000, //10 seconds
        "TimeoutValue": 5000 //5 seconds
      },
      "RetryOptions": {
        "RetryCount": 3,
        "RetryOnServerError": true
      }
    },
    {
      "UpstreamPathTemplate": "/gateway/products/search/{SearchString}",
      "DownstreamPathTemplate": "/api/products/search/{SearchString}",
      "DownstreamHostAndPorts": [
        {
          "Host": "products-microservice",
          "Port": 8080
        }
      ],
      "UpstreamHttpMethod": [
        "Get"
      ],
      "UpstreamScheme": "http",
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 10000, //10 seconds
        "TimeoutValue": 5000 //5 seconds
      },
      "RetryOptions": {
        "RetryCount": 3,
        "RetryOnServerError": true
      }
    },
    {
      "UpstreamPathTemplate": "/gateway/products/search/productid/{ProductId}",
      "DownstreamPathTemplate": "/api/products/search/productid/{ProductId}",
      "DownstreamHostAndPorts": [
        {
          "Host": "products-microservice",
          "Port": 8080
        }
      ],
      "UpstreamHttpMethod": [
        "Get"
      ],
      "UpstreamScheme": "http",
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 10000, //10 seconds
        "TimeoutValue": 5000 //5 seconds
      },
      "RetryOptions": {
        "RetryCount": 3,
        "RetryOnServerError": true
      }
    },
    {
      "UpstreamPathTemplate": "/gateway/auth/register",
      "DownstreamPathTemplate": "/api/auth/register",
      "DownstreamHostAndPorts": [
        {
          "Host": "users-microservice",
          "Port": 9090
        }
      ],
      "UpstreamHttpMethod": [
        "Post",
        "Options"
      ],
      "UpstreamScheme": "http",
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 10000, //10 seconds
        "TimeoutValue": 5000 //5 seconds
      },
      "RetryOptions": {
        "RetryCount": 3,
        "RetryOnServerError": true
      }
    },
    {
      "UpstreamPathTemplate": "/gateway/auth/login",
      "DownstreamPathTemplate": "/api/auth/login",
      "DownstreamHostAndPorts": [
        {
          "Host": "users-microservice",
          "Port": 9090
        }
      ],
      "UpstreamHttpMethod": [
        "Post",
        "Options"
      ],
      "UpstreamScheme": "http",
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 10000, //10 seconds
        "TimeoutValue": 5000 //5 seconds
      },
      "RetryOptions": {
        "RetryCount": 3,
        "RetryOnServerError": true
      }
    },
    {
      "UpstreamPathTemplate": "/gateway/users/{userID}",
      "DownstreamPathTemplate": "/api/users/{userID}",
      "DownstreamHostAndPorts": [
        {
          "Host": "users-microservice",
          "Port": 9090
        }
      ],
      "UpstreamHttpMethod": [
        "Get"
      ],
      "UpstreamScheme": "http",
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 10000, //10 seconds
        "TimeoutValue": 5000 //5 seconds
      },
      "RetryOptions": {
        "RetryCount": 3,
        "RetryOnServerError": true
      }
    }
  ],

  "GlobalConfiguration": {
    "BaseUrl":  "http://localhost:2000"
  }
}


/*http://localhost:2000/gateway/Orders will forward request to http://orderservice.api:8080/api/Orders */